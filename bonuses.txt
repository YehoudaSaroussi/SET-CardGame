BONUS CHALLENGE FORM
--------------------

For each bonus challenge you have implemented, please replace the sentence "We are not entitled to this bonus."
with a short description of:

1. How it was implemented in your code
2. Where it was used (in which class methods).
3. How you tested that it is working correctly.

--------------------

1. Fully supporting all configuration fields and avoiding the use of magic numbers
a. the code does not include magic numbers, when needed, we called the right field in the config file.
 the code supporting any table size, turn timeout time, penalty and point freeze time.
 b. in dealer methods: UpdateTimerDisplay(turnTimeoutMillis/turnTimeoutWarningMillis), RemoveAllCards and PlaceCards (tableSize).
 in player methods: point(pointFreezeMillis), penalty(penaltyFreezeMillis).
 c. we changed the config field values to various values and ensured that the code supporting them.

--------------------

2. Terminating all threads (that you created) gracefully and in reverse order to the order they were created in.
a. the dealer thread runs first and then creates and runs the player threads by the order of the players array. if the player
is non-human he creates another thread. when the terminate method called on the dealer thread, we are calling the players terminate
method by order of the end of the array, terminating thier AI threads first and then terminating them(each thread waiting to the one
before him to end with join method). this is the exactly reversed order to the order they were created in.
b. in player class: terminate method and run method.
   in dealer class: terminate method and run method.
c.we printed each time a thread start occured and a thread end occured, and made sure that the order of ending is reversed.    
 


--------------------

3. Handling the config.turnTimeoutMillis value as follows:
config.turnTimeoutMillis < 0: display nothing.
config.turnTimeoutMillis = 0: display a timer since the last action (reshuffle or set collected).
Note: in modes without a countdown timer the dealer must ensure there is always at least one legal set on the table.

We are not entitled to this bonus.

--------------------

4. Making sure that the threads do not wake up unless some actual job needs to be done (e.g., a value needs to be
changed on the display, key input needs to be handled, etc.) and the only threads created by you are:
1 thread per player + 1 additional thread for non-human players.

a. we implemented it by using a presice and thread-safe syncroniztion mechanism that ensure that all thread are in waiting
state while they have no job to be done(no busy-wait situation).
b. in each run method(delaer,player,aiThread).
c. we tested it by printing something to the console each time a thread is making a move, and checked that nothing was
printed in situations that the thread didnt had a job to do.
